@page "/DesignAdd"

@using CititorServer.Data.Model
@using CititorServer.Data.Service

@inject IDesignService IDesignService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IJSRuntime JSRuntime


<h1>Adicionar Diseños</h1>
<div class="row">
    <div class="d-flex mr-5 m-auto col-lg-4 col-sm-12">
        
        <EditForm Model="@design" OnValidSubmit="@DesignInsert">
            <table>
                <tr>
                    Código Diseño:
                    <input type="text" @bind="design.idDiseño" required  class="col-12" />
                </tr> 
                <tr>
                    Url Imagen Diseño:
                    <input type="text" @bind="design.imagenDiseño" required class="col-12" />
                </tr>
                <tr>
                    Fecha:
                    <input type="date" @bind="design.fechaCarga" class="col-12"  />
                </tr>
                <tr>
                    Descripción:
                    <input type="text" @bind="design.descripcion"class="col-12" />
                </tr>
                <tr>
                    Tamaño:
                    <input type="text" @bind="design.Tamaño" class="col-12"/>
                </tr>
                <br>
                <br>
                <tr>
                    <td colspan="2" class="d-flex justify-content-between">
                        <input type="submit" value="Adicionar" class="btn btn-primary btn-lg col-7" />
                        <input type="button" value="Cancelar" class="btn btn-secondary btn-lg col-4" @onclick="@Cancel" />
                      </td>  
                </tr>
            

            </table>

        </EditForm>
    </div>
    <div class="d-flex m-auto col-lg-5 col-sm-8">
        <div class="d-flex flex-row flex-wrap" >
        
                    <div class="card m-3 " style="width: 18rem;">
                        @if(design.imagenDiseño!=null){
                            <img class="card-img-top" src="@design.imagenDiseño" alt="Card image cap">
                        }else{
                            <img class="card-img-top" src="@defaultImage" alt="Card image cap">
                        }
                    
                        <div class="card-body">
                            <h5 class="card-title">@design.descripcion</h5>
                            <p class="card-text">@design.fechaCarga - @design.Tamaño </p>
                        
                        </div>
                    </div>  

        </div>
    </div>
</div>
<br>
<br> 
<br>
<div class="container">
  <h2>Diseños Almacenados</h2>
      
  <div class="table-responsive">
      <table class="table table-striped table-bordered mw-75 m-auto" id="example">
    <thead>
      <tr>
        <th>Código</th>
         <th>Descripción</th>
        <th>Image Path</th>
        
        <th>Fecha de Carga</th>
       
        <th>Tamaño</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody >
        @foreach (var designFor in designsList)
        {
            <tr>
                <td>@designFor.idDiseño</td>
                <td >@designFor.descripcion</td>
                <td><input type="text" disabled maxlength="100" value="@designFor.imagenDiseño"> </td>
                <td>@designFor.fechaCarga</td>
                <td>@designFor.Tamaño</td>
                <td><a href="/DesignList" class="btn-icon" @onclick="() => DesignUpdate(designFor, 1)"><span class="oi oi-eye" ></span></a><a href="/DesignList" class="btn-icon" @onclick="() => DesignUpdate(designFor, 0)"><span class="oi oi-minus" ></span></a></td>
           
            </tr>
        }
     
    </tbody>
    
  </table>
</div>
<br>
<br> 
<br>
</div>
    
@code {
    string defaultImage="https://dbdzm869oupei.cloudfront.net/img/quadres/preview/29304.png";
    Design design = new Design();
      IEnumerable<Design> designsList;
    

    protected async Task DesignInsert()
    {
      
        await IDesignService.DesignInsert(design);
         designsList= await IDesignService.AllDesignsGet();

       
    }
    
    protected async Task DesignUpdateSend(Design designIn)
    {   
     
   
        await IDesignService.DesignUpdate(designIn);
        Console.WriteLine("actualizado");

      
    }

     protected override async Task OnInitializedAsync(){
         
        designsList= await IDesignService.AllDesignsGet();
         
        
    }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if(firstRender){
                    await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
            }
        }

    
    public async void  DesignUpdate(Design designIn,int value){
        designIn.status=value;
        await DesignUpdateSend(designIn);
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}