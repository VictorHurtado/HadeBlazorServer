@page "/DesignList"


@using CititorServer.Data.Model
@using CititorServer.Data.Service

@inject IDesignService IDesignService
@inject IListdeService IListdeService
@inject NavigationManager NavigationManager

<div class="d-flex flex-row justify-content-between ">
    <h3>Asignación de Diseños</h3>
    <div class="d-flex flex-row justify-content-between">
        <p>Articulo: @(selectedArticle!=null?selectedArticle.descripcionArticulo : "" )</p>
        
        <br><br>
        <a class="btn btn-custom mx-3" style="color:white;" @onclick="()=>expandCarList = !expandCarList">
            <span class="oi oi-cart"></span></a>
    </div>
</div>
<div class="d-flex flex-row ">

    <div class="d-flex flex-row flex-wrap ">
        @foreach (var design in designsList)
        {
            if (design.status == 1)
            {
                <div class="card m-3 " style="width: 18rem;">
                    <img class="card-img-top minHeightDesingImage" src="@design.imagenDiseño" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">@design.idDiseño @design.descripcion</h5>
                        <p class="card-text">@design.fechaCarga - @design.Tamaño </p>
                        <a class="btn btn-primary" style="color:white;" @onclick="()=>selectDesignOfList(design)">Asignar</a>
                    </div>
                </div>
            }
        }
    </div>


    @if (expandCarList)
    {
        <div class=" d-flex flex-column carDesign col-4">
          
            @foreach (var article in articlesListDe)
            {
                <a class="my-2" @onclick="()=>selectArticleOfList(article)">
                    <div class="card mx-auto" style="width: 8rem; height: 200px;">
                        <img class="card-img-top cardDesign" src="@article.imagenArticulo" alt="Card image cap">
                        <div class="card-body">

                            <p class="card-text" >@article.descripcionArticulo </p>
                            

                        </div>

                    </div>


                </a>


            }
              <div class="my-5"  style="width:100%; color:white; ">

                <h4>Vista Previa</h4>
                <p>Articulo: @(selectedArticle!=null?selectedArticle.descripcionArticulo : "" )</p>
                <p>Diseño: @(selectedDesign!=null?selectedDesign.descripcion : "" )</p>
                @if(imagePathPreview!= "images/"){
                    <div style="width:100%; display:block"> 
                        <img class="mx-auto maxWidhtPreviewImage" src="@imagePathPreview" alt="Card image cap">
                    </div>
                }
                <br>
                <br>
                <a class="btn btn-primary  btn-lg btn-block  " style="color:white;" @onclick="()=>asignDesign(selectedArticle.idArticulo, selectedDesign.idDiseño)">Guardar</a>
            </div>

        </div>
    }


</div>


@code {
    string visibleArticleClass { get; set; }

    IEnumerable<Design> designsList;
    IEnumerable<Article> articlesListDe;

    protected bool expandCarList;

    Article selectedArticle;
    Design selectedDesign;

    string imagePathPreview= "images/";

    protected override async Task OnInitializedAsync()
    {
        designsList = await IDesignService.AllDesignsGet();
        articlesListDe = await IListdeService.AllArticleListDe();
    }
    void selectDesignOfList(Design design)
    {
        selectedDesign = design;
         Console.WriteLine(selectedDesign.descripcion);
         updatePreview();
    }
    void selectArticleOfList(Article article)
    {
        selectedArticle = article;
        
        Console.WriteLine(selectedArticle.descripcionArticulo);
        updatePreview();
    }
    void updatePreview(){
        if(selectedArticle!=null && selectedDesign!= null){
            resetImagePath();
            imagePathPreview= $"{imagePathPreview}{selectedArticle.idArticulo}{selectedDesign.idDiseño}.jpg";  
            Console.WriteLine(imagePathPreview);
        }
        
    }
     void resetImagePath(){
        imagePathPreview= "images/";
    }
    protected async Task asignDesign (int idArticle,int idDesign) {
        if(idArticle!=0 && idDesign!=0){
            bool result = await IListdeService.ListdeUpdateDesign(idArticle,idDesign);
            Console.WriteLine(result);
            selectedDesign= null;
            selectedArticle=null;
           resetImagePath();

        }
        
    }
   
}