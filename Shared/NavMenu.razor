
@using CititorServer.Data.Model
@using CititorServer.Data.Service
@inject IMenuService IMenuService;
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">CititorServer</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    @* <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            
        </li>
        
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link dropdown-toggle" href="#articleSubmenu" data-toggle="collapse" aria-expanded="false">
                <span class="oi oi-person" aria-hidden="true"></span> Article
            </NavLink>
           <ul class="collapse list-unsstyled" id="articleSubmenu">
            <li  class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> New Article
                </NavLink>
                
            </li>
            <li  class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Edit Article
                </NavLink>
                
            </li>
           </ul>
        </li>
        
         <li class="nav-item px-3">
            <NavLink class="nav-link" href="EditArticle">
                <span class="oi oi-person" aria-hidden="true"></span> Edit Article
            </NavLink>
        </li>
    </ul> *@
    @if(menuList==null){
        <p> <em> Loading ... </em></p>
    }else{
        <ul class="nav flex-column">
            @foreach (var mn in menuList)
            {
                @if(mn.ParentMenuId == 0){
                    <li class="nav-item px-3">
                         <NavLink class="nav-link" href="@mn.PageName" @onclick="()=>GetISCliecked(mn)">
                            <span class="@mn.IconName" aria-hidden="true"></span>@mn.MenuName
                        </NavLink>
                        <ul class="nav flex-column">
                            @foreach (var mn1 in menuList)
                            {   
                                @if(mn.MenuId == mn1.ParentMenuId){
                                    @if(expandSubNav && mn.MenuId == clickedMenu){
                                        <li class="nav-item px-3">
                                            <NavLink class="nav-link" href="@mn1.PageName" @onclick="()=>GetISCliecked(mn1)">
                                                <span class="@mn1.IconName" aria-hidden="true"></span>@mn1.MenuName
                                            </NavLink>
                                        </li>
                                    }
                                }
                            }
                            
                        </ul>
                    </li>
                }
            }


        </ul>
    }

</div>

@code {
    private bool collapseNavMenu = true;
    public IEnumerable<MenuInfo> menuList;
    
    private bool expandSubNav;
    private int clickedMenu = 0;

    private bool hasPageName=true;
    private int prevClickedMenu=0;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {   
        if(hasPageName){
             collapseNavMenu = !collapseNavMenu;
        }

    }
    public void GetISCliecked(MenuInfo mn){
        clickedMenu = mn.MenuId;
        if(prevClickedMenu != clickedMenu){
            expandSubNav=false;
            if(mn.PageName!="" || mn.MenuName=="Home"){
                hasPageName=true;
            }else{
                expandSubNav=!expandSubNav;
                hasPageName=false;
        
            }
        }else{
            expandSubNav=!expandSubNav;
        }
        prevClickedMenu=clickedMenu;
    }
    protected override async Task OnInitializedAsync(){
        menuList= await IMenuService.GetMenuData();

    }
}
